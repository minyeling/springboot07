1.新建一个 过滤器类 继承 Filter
2.实现 Filter类 中的方法
3.在 自定义的Filter类 上添加注解 @WebFilter(filterName = "MyFilter",urlPatterns = "/login")
4.在 启动类上添加注解 @ServletComponentScan
    //也可以@ServletComponentScan（basePackages = "此处写明类地址，格式为包名+类名（如com.yxc.*）"）【这种没成功】
    方法三：（配置类仍需@Configuration）
        优点：可以指定过滤的路径和不过滤的路径
    @Bean
        public FilterRegistrationBean  getRegistration(){
            //新建过滤器注册类
            FilterRegistrationBean registration = new FilterRegistrationBean();
            // 添加我们写好的过滤器
            registration.setFilter( new MyFilter());
            // 设置过滤器的URL模式
            registration.addUrlPatterns("/login");
            return registration;
        }

注：
过滤器：Filter是Servlet技术中最实用的技术，Web开发人员通过Filter技术，对web服务器管理的所有web资源：
    例如Jsp, Servlet, 静态图片文件或静态 html 文件等进行拦截，从而实现一些特殊的功能。
    例如实现URL级别的权限访问控制、过滤敏感词汇、压缩响应信息等一些高级功能。
    它主要用于对用户请求进行预处理，也可以对HttpServletResponse进行后处理。
    使用Filter的完整流程：Filter对用户请求进行预处理，接着将请求交给Servlet进行处理并生成响应，最后Filter再对服务器响应进行后处理。

注2：
三大器在springboot中使用时，首先实现相应的接口定义类，然后通过配置类将其加入到spring容器中，从而实现相应的功能。